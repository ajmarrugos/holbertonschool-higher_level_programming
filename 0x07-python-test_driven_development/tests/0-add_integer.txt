===============================
Test for 0-add_integer.py
===============================

Evaluation ``add_integer``

    >>> add_integer = __import__('0-add_integer').add_integer

Test Cases:

1.  Basic usage:
    >>> add_integer(1, 2)
    3

2.  Negative input:
    >>> add_integer(100, -2)
    98

3.  One input:
    >>> add_integer(2)
    100

4.  None input:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

5.  Float and negative input:
    >>> add_integer(100.3, -2)
    98

6.  Float overflow:
    >>> add_integer(1500.5)
    1598

7.  Float NaN:
    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

8.  None input:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

9.  Double negative float input:
    >>> add_integer(-100.5, -10.8)
    -110

10. Double string input:
    >>> add_integer("holberton", "school")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
